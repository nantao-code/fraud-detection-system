feature_engineering:
  corr_threshold: 0.8
  create_interaction_features: false
  create_polynomial_features: false
  create_statistical_features: false
  early_stopping_rounds: 50
  eval_metric: logloss
  iv_threshold: 0.1
  missing_rate_threshold: 0.3
  polynomial_degree: 2
  # 分类任务指标
  primary_metric_classification: roc_auc
  scoring_metrics_classification:
  - roc_auc
  - ks
  # 回归任务指标
  primary_metric_regression: neg_root_mean_squared_error
  scoring_metrics_regression:
  - neg_root_mean_squared_error
  - neg_mean_absolute_error
  - r2
  target_column: label
  unique_value_threshold: 10
  use_advanced_engineering: false
  use_category_feature: true
  use_corr_selection: true
  use_importance_selection: true
  use_missing_selection: true
  vif_threshold: 10.0
logging:
  level: DEBUG
  file: logs/{input_data}_{imbalance_method}_{model_name}_{timestamp}_training.log
  logs_dir: logs
modeling:
  early_stopping_rounds: 100
  handle_imbalance: true
  imbalance_method: smote
  model_type: RF
  # 任务类型: classification 或 regression
  task_type: classification
  models:
  - XGB
  - RF
  - LR
  - LGB
  # 回归模型列表
  regression_models:
  - RIDGE
  - XGB_REG
  - RF_REG
  - LGB_REG
  n_iter: 5
  n_splits: 5
  random_state: 42
  test_size: 0.3
  use_feature_engineering: true
  use_hyperparameter_tuning: true
  validation_split_ratio: 0.1
  
  # 各模型的默认参数配置
  # 分类模型
  logistic_regression:
    C: 1.0
    penalty: "l2"
    solver: "saga"
    max_iter: 5000
    tol: 0.0001
    class_weight: "balanced"
  
  xgboost:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: 6
    eval_metric: "auc"
  
  random_forest:
    n_estimators: 100
    max_depth: null
    min_samples_split: 2
    min_samples_leaf: 1
    class_weight: "balanced"
  
  lightgbm:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: -1
    num_leaves: 31
    class_weight: "balanced"
    feature_fraction: 1.0
    bagging_fraction: 1.0
    bagging_freq: 0
    min_child_samples: 20
    lambda_l1: 0.0
    lambda_l2: 0.0
    min_split_gain: 0.0
  
  # 回归模型
  ridge_regression:
    alpha: 1.0
    solver: "auto"
    max_iter: 1000
    tol: 0.0001
  
  xgboost_regression:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: 6
    eval_metric: "rmse"
  
  random_forest_regression:
    n_estimators: 100
    max_depth: null
    min_samples_split: 2
    min_samples_leaf: 1
  
  lightgbm_regression:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: -1
    num_leaves: 31
    feature_fraction: 1.0
    bagging_fraction: 1.0
    bagging_freq: 0
    min_child_samples: 20
    lambda_l1: 0.0
    lambda_l2: 0.0
    min_split_gain: 0.0
monitoring:
  alerts:
    email_enabled: false
    email_recipients: []
    webhook_enabled: false
    webhook_url: ''
  drift_detection:
    sample_size: 1000
    threshold: 0.05
  performance_thresholds:
    # 分类任务性能阈值
    classification:
      accuracy: 0.75
      auc: 0.8
      precision: 0.7
      recall: 0.65
    # 回归任务性能阈值
    regression:
      mse: 0.1
      rmse: 0.3
      mae: 0.25
      r2: 0.7
  retention_days: 30
paths:
  data_path: data
  input_data: data/test_creditcard.csv
  model_output: models/{input_data}_{imbalance_method}_{model_name}_model.joblib
  pipeline_model_output: models/pipeline_{input_data}_{imbalance_method}_{model_name}.joblib
  pipeline_results_output: models/pipeline_{input_data}_{imbalance_method}_{model_name}_results.json
  plot_output: plots/{input_data}_{imbalance_method}_{model_name}_{plot_type}_plot.png
  final_features_output: features/{input_data}_{imbalance_method}_{model_name}_final_features.json
  comparison_output: models/comparison_{data_name}_{imbalance_method}_{timestamp}.csv
  pmml_model_output: pmmls/puts/pipeline_{input_data}_{imbalance_method}_{model_name}.pmml


