# 回归任务配置文件
# 用于欺诈损失金额预测等回归任务

feature_engineering:
  # 数据预处理配置
  preprocessing:
    # 缺失值处理策略：mean/median/most_frequent/constant
    missing_strategy: median  # 缺失值填充策略
    # 异常值处理方法：iqr/zscore/iso_forest/lof/none
    outlier_method: iqr  # 异常值检测方法
    outlier_threshold: 1.5  # 异常值检测阈值（IQR倍数）
    # 数据变换方法：yeo-johnson/box-cox/quantile/log/none
    transform_method: yeo-johnson  # 数据分布变换方法
    # 标准化方法：standard/minmax/robust/none
    scale_method: standard  # 特征标准化方法
    # 编码方法：ordinal/onehot/target/none
    encoding_method: ordinal  # 类别特征编码方法
    # 类别特征阈值：当唯一值数量小于此阈值时视为类别特征
    categorical_threshold: 10  # 类别特征识别阈值
    # 数值特征阈值：当唯一值数量大于此阈值时视为数值特征
    numerical_threshold: 20  # 数值特征识别阈值

  # 特征选择配置
  feature_selection:
    # 缺失率阈值：缺失率高于此值的特征将被移除
    missing_rate_threshold: 0.95  # 特征缺失率阈值
    # IV值阈值：IV值低于此值的特征将被移除（仅分类任务）
    iv_threshold: 0.02  # 信息价值阈值
    # 相关性阈值：相关性高于此值的特征对将被处理
    correlation_threshold: 0.8  # 特征相关性阈值
    # 方差阈值：方差低于此值的特征将被移除
    variance_threshold: 0.01  # 特征方差阈值
    # 互信息选择：选择互信息最高的K个特征
    mutual_info_k: 20  # 互信息选择特征数量
    # 特征重要性阈值：重要性低于此值的特征将被移除
    importance_threshold: 0.01  # 特征重要性阈值
    # F检验分类选择：选择F检验分类得分最高的K个特征
    f_classif_k: 20  # F检验分类特征选择数量
    # F检验回归选择：选择F检验回归得分最高的K个特征
    f_regression_k: 20  # F检验回归特征选择数量
    # 选择方法列表：可选值包括missing_rate, correlation, variance, mutual_info, importance, iv, f_classif, f_regression
    selection_methods:  # 特征选择方法列表
    - missing_rate
    - correlation
    - variance
    - mutual_info
    - importance
    - f_regression

  # 特征生成配置
  feature_generation:
    # 是否生成多项式特征
    generate_polynomial: false  # 生成多项式特征开关
    # 多项式次数：生成的多项式特征的最高次数
    polynomial_degree: 2  # 多项式特征次数
    # 是否包含偏差项：是否在多项式中包含常数项
    polynomial_include_bias: false  # 多项式包含偏差项开关
    # 是否生成交互特征
    generate_interaction: false  # 生成交互特征开关
    # 交互特征对：指定要生成交互特征的特征对，null表示生成所有可能的交互
    interaction_pairs: null  # 指定交互特征对
    # 是否生成统计特征
    generate_statistical: false  # 生成统计特征开关
    # 统计分组列：用于生成分组统计特征的列名列表
    statistical_group_cols: null  # 统计特征分组列
    # 是否生成分箱特征
    generate_binning: false  # 生成分箱特征开关
    # 分箱配置：为指定列配置分箱箱数，格式为{列名: 箱数}
    bins_config: null  # 分箱配置
    # 是否生成聚合特征
    generate_aggregation: false  # 生成聚合特征开关
    # 聚合窗口列：用于生成滑动窗口聚合特征的列名列表
    aggregation_window_cols: null  # 聚合特征窗口列

  # 其他配置
  target_column: label  # 目标变量列名
  unique_value_threshold: 10  # 唯一值数量阈值
  early_stopping_rounds: 50  # 早停轮数
  eval_metric: rmse  # 评估指标
  # 分类任务指标（保留结构完整性）
  primary_metric_classification: roc_auc  # 分类主评估指标
  scoring_metrics_classification:  # 分类评估指标列表
  - roc_auc
  - ks
  # 回归任务指标
  primary_metric_regression: neg_root_mean_squared_error  # 回归主评估指标
  scoring_metrics_regression:  # 回归评估指标列表
  - neg_root_mean_squared_error
  - neg_mean_absolute_error
  - r2
  vif_threshold: 10.0  # 方差膨胀因子阈值

logging:
  level: INFO
  file: logs/{input_data}_{imbalance_method}_{model_name}_{timestamp}_training.log
  logs_dir: logs

modeling:
  early_stopping_rounds: 100
  handle_imbalance: false
  imbalance_method: none
  model_type: RF_REG
  # 任务类型: classification 或 regression
  task_type: regression
  # 分类模型列表（回归任务中不使用）
  models:
  - RIDGE
  - XGB_REG
  - RF_REG
  - LGB_REG
  n_iter: 10
  n_splits: 5
  random_state: 42
  test_size: 0.3
  use_feature_engineering: true
  use_hyperparameter_tuning: true
  validation_split_ratio: 0.1
  
  # 各模型的默认参数配置
  # 分类模型（保留结构完整性）
  logistic_regression:
    C: 1.0
    penalty: "l2"
    solver: "saga"
    max_iter: 5000
    tol: 0.0001
    class_weight: "balanced"
  
  xgboost:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: 6
    eval_metric: "auc"
  
  random_forest:
    n_estimators: 100
    max_depth: null
    min_samples_split: 2
    min_samples_leaf: 1
    class_weight: "balanced"
  
  lightgbm:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: -1
    num_leaves: 31
    class_weight: "balanced"
    feature_fraction: 1.0
    bagging_fraction: 1.0
    bagging_freq: 0
    min_child_samples: 20
    lambda_l1: 0.0
    lambda_l2: 0.0
    min_split_gain: 0.0
  
  # 回归模型
  ridge_regression:
    alpha: 1.0
    solver: "auto"
    max_iter: 1000
    tol: 0.0001
  
  xgboost_regression:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: 6
    eval_metric: "rmse"
  
  random_forest_regression:
    n_estimators: 100
    max_depth: null
    min_samples_split: 2
    min_samples_leaf: 1
  
  lightgbm_regression:
    n_estimators: 1000
    learning_rate: 0.1
    max_depth: -1
    num_leaves: 31
    feature_fraction: 1.0
    bagging_fraction: 1.0
    bagging_freq: 0
    min_child_samples: 20
    lambda_l1: 0.0
    lambda_l2: 0.0
    min_split_gain: 0.0

monitoring:
  alerts:
    email_enabled: false
    email_recipients: []
    webhook_enabled: false
    webhook_url: ''
  drift_detection:
    sample_size: 1000
    threshold: 0.05
  performance_thresholds:
    # 分类任务性能阈值（保留结构完整性）
    classification:
      accuracy: 0.75
      auc: 0.8
      precision: 0.7
      recall: 0.65
      ks: 0.3
    # 回归任务性能阈值
    regression:
      mse: 0.1
      rmse: 0.3
      mae: 0.25
      r2: 0.7
  retention_days: 30

paths:
  data_path: data
  input_data: data/data_resression.csv
  model_output: models/{input_data}_{imbalance_method}_{model_name}_regression_model.joblib
  pipeline_model_output: models/pipeline_{input_data}_{imbalance_method}_{model_name}.joblib
  pipeline_results_output: models/pipeline_{input_data}_{imbalance_method}_{model_name}_results.json
  plot_output: plots/{input_data}_{imbalance_method}_{model_name}_{plot_type}_regression_plot.png
  final_features_output: features/{input_data}_{imbalance_method}_{model_name}_final_features.json
  comparison_output: models/comparison_{data_name}_{imbalance_method}_{timestamp}.csv
  pmml_model_output: pmmls/pipeline_{input_data}_{imbalance_method}_{model_name}.pmml